digraph g {
  rankdir=TB;
  graph [dpi="64"];
  node [shape=box ];
  Top     [label="Caller", color=black];

  GetInst [label="config::GetInstance()", color=red URL="@ref test::config::GetInstance"];
  AbsSet  [label="ConfigIF::Set()", color=black URL="@ref test::config::ConfigIF::Set"];
  AbsGetS [label="ConfigIF::GetString()", color=black URL="@ref test::config::ConfigIF::GetString"];
  AbsGetI [label="ConfigIF::GetInteger()", color=black URL="@ref test::config::ConfigIF::GetInteger"];

  Inst [label="Instance1", color=red ];
  Set  [label="TestConfig::Set()", color=red URL="@ref anonymous_namespace{TestConfig.cpp}::TestConfig::Set"];
  GetS [label="TestConfig::GetString()", color=red URL="@ref anonymous_namespace{TestConfig.cpp}::TestConfig::GetString"];
  GetI [label="TestConfig::GetInteger()", color=red URL="@ref anonymous_namespace{TestConfig.cpp}::TestConfig::GetInteger"];

  Top -> GetInst [label=" 1.Get instance", dir="both", fontcolor=orange, color=orange];
  Top -> AbsSet;
  Top -> AbsGetS [label=" 2.Abstract IF"];
  Top -> AbsGetI;

  GetInst -> Inst [style="dotted", dir="back"];
  AbsSet  -> Set [penwidth="2", color=blue];
  AbsGetS -> GetS [penwidth="2", color=blue, label=" Inheritance", fontcolor=blue];
  AbsGetI -> GetI [penwidth="2", color=blue];

  memo1 [label="TestConfig.cpp", fontcolor=red, shape="plaintext", style="" ];
  AbsGetI -> memo1 [style="invis"];
}


